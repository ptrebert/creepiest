[Run]
load_path= /home/pebert/work/code/mpggit/creepiest/pipelines
load_name= preprocess.ppl_prep_encexp
mkdir= ${Pipeline:tempdir}

[Scripts]
mktrans= /home/pebert/work/code/mpggit/creepiest/scripts/preprocess/make_transcriptome.py
mrgens= /home/pebert/work/code/mpggit/creepiest/scripts/preprocess/merge_ucsc_ensembl.py

[Pipeline]
name= PREPENCEXP
jobname= PREPEXP
datadir= /TL/deep/fhgfs/projects/pebert/thesis/biodata/dlfolder
refdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/genemodel
seqdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/genomes
orthdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/orthologs
tempdir= /TL/deep/fhgfs/projects/pebert/thesis/biodata/pipelined/conversion/encexp
tmpquant= /TL/deep/fhgfs/projects/pebert/thesis/biodata/pipelined/conversion/encexp/tmp
bedout= /TL/deep/fhgfs/projects/pebert/thesis/biodata/pipelined/conversion/encexp/bed
hdfout= /TL/deep/fhgfs/projects/pebert/thesis/biodata/pipelined/conversion/encexp/hdf5

encmd= /home/pebert/work/code/mpggit/creepiest/datasrc/encode/encode_metadata_ro.tsv
sramd= /home/pebert/work/code/mpggit/creepiest/datasrc/sra/20160706_SRA_expression_fastq.tsv

# dump sra to fastq
sradump= fastq-dump --dumpbase --split-files --skip-technical --readids --gzip --outdir ${tempdir} {{inputfile}}

# create transcriptomes
mrgens= ${Scripts:mrgens} --locations {{inputfile}} --to-biotype ${refdir}/ensemblSource_UCSC_{ASSEMBLY[0]}.txt.gz
 --to-name ${refdir}/ensemblToGeneName_UCSC_{ASSEMBLY[0]}.txt.gz --out-gff {{outputfile}}
# coord-base 0 is likely correct since I assume that the Ensembl dumps in UCSC are 0-based;
# at least checking for consistent length (seq and coordinates) gives the correct results
mktrans= ${Scripts:mktrans} --assembly {ASSEMBLY[0]} --seq-file ${seqdir}/{ASSEMBLY[0]}.2bit --annotation {{inputfile}}
 --out-fasta {{outputfile}} --coord-base 0
# build Salmon indices
hsaidx31= salmon index --kmerLen 31 --transcripts <(gunzip -c {{inputfile}}) --threads 16 --index ${refdir}/{TRANSCRIPTOME[0]}.k31.idx --type quasi
mmuidx13= salmon index --kmerLen 13 --transcripts <(gunzip -c {{inputfile}}) --threads 16 --index ${refdir}/{TRANSCRIPTOME[0]}.k13.idx --type quasi
genidx19= salmon index --kmerLen 19 --transcripts <(gunzip -c {{inputfile}}) --threads 16 --index ${refdir}/{TRANSCRIPTOME[0]}.k19.idx --type quasi

# quantification
qmmuse= salmon quant --index ${refdir}/mmu_mm9_gencode_vM1.pctr_norm.k13.idx --threads 16 --libType U --unmatedReads <(gunzip -c {{inputfiles}}) --biasCorrect
 --output ${tmpquant}/{EXPID[0]} --forgettingFactor 0.8 --useVBOpt --sensitive --geneMap ${refdir}/mmu_mm9_gencode_vM1.pctr_map.tsv
qallpe= salmon quant --index {index} --threads 16 --libType IU -1 <(gunzip -c {reads1}) -2 <(gunzip -c {reads2}) --biasCorrect
 --output ${tmpquant}/{expid} --forgettingFactor 0.8 --useVBOpt --sensitive --geneMap {genemap}

runall= touch {{outputfile}}



hsaquant= salmon quant --index ${refdir}/gencode.v19.pc_transcripts_k31.idx --threads 16 --libType U --unmatedReads <(gunzip -c {{inputfiles}}) --biasCorrect
 --output ${tmpquant}/{ENCEXP[0]} --forgettingFactor 0.8 --useVBOpt
musquantpe= salmon quant --index ${refdir}/gencode.vM1.pc_transcripts_k21.idx --threads 16 --libType IU -1 <(gunzip -c {reads1}) -2 <(gunzip -c {reads2}) --biasCorrect
 --output ${tmpquant}/{species}_{cell} --forgettingFactor 0.8 --useVBOpt

convreg= creepiest.py -dmp ${EnvPaths:confdump}/convert -wrk 1 convert --task region -i {{inputfile}} -o {{outputfile}} --use-header -og gencode/{GENCVER[0]}/pcgenes/{REGTYPE[0]} --name-idx 3
convexpr= creepiest.py -dmp ${EnvPaths:confdump}/convert -wrk 1 convert --task region -i {{inputfile}} -o {{outputfile}} --use-header -og gencode/{GENCVER[0]}/pcgenes --name-idx 3




[Ruffus]
use_threads= True
jobs= 30
verbose= 2
history_file= ${EnvPaths:ruffushist}/${Pipeline:name}_hist.sqlite
log_file= ${EnvPaths:ruffuslog}/${Pipeline:name}_ruffus.log

[JobConfig]
jobname= ${Pipeline:jobname}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=5G,slots_free=1,tmp_free=5G,h=deep1[0123456789]*|deep2[0123456789]*
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[MemJobConfig]
jobname= ${Pipeline:jobname}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=30G,slots_free=4,tmp_free=5G,h=deep1[0123456789]*|deep2[0123456789]*
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[ParallelJobConfig]
jobname= ${Pipeline:jobname}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=10G,slots_free=16,tmp_free=5G,h=deep1[0123456789]*|deep2[0123456789]*
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 1
