[Run]
load_path= /home/pebert/work/code/mpggit/creepiest/pipelines
load_name= preprocess.ppl_prep_chainfiles

[Pipeline]
name= PREPCHAINS
indir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/chainfiles
refdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/chromsizes
tempdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/chainfiles/mkrecip
outdir= /TL/deep/fhgfs/projects/pebert/thesis/refdata/chainfiles/rbest
encmd= /home/pebert/work/code/mpggit/creepiest/datasrc/encode/20160211_ENCODE_metadata.tsv
encds= /home/pebert/work/code/mpggit/creepiest/datasrc/encode/20160225_ENCDS_ids.json

# following set of commands based on:
# http://genomewiki.ucsc.edu/index.php/HowTo:_Syntenic_Net_or_Reciprocal_Best (-> Reciprocal Best)

# take chain, switch, make target best chain
swap= chainStitchId {{inputfile}} stdout | chainSwap stdin stdout | chainSort stdin stdout | gzip -c > {{outputfile}}
# take target best chain, make target best net
prenet= chainPreNet {{inputfile}} ${refdir}/{TARGET[0]}.chrom.sizes ${refdir}/{QUERY[0]}.chrom.sizes stdout |
        chainNet -minSpace=1 -minScore=0 stdin ${refdir}/{TARGET[0]}.chrom.sizes ${refdir}/{QUERY[0]}.chrom.sizes stdout /dev/null |
        netSyntenic stdin stdout | gzip -c > {{outputfile}}
# take target best net AND target best chain, make reciprocal best chain
netchain= netChainSubset {{inputfile}} ${tempdir}/swap/{TARGET[0]}_to_{QUERY[0]}.tbest.chain.gz stdout |
          chainStitchId stdin stdout | gzip -c > {{outputfile}}
# take reciprocal best chain and swap again
reswap= chainSwap {{inputfile}} stdout | chainSort stdin stdout | gzip -c > {{outputfile}}
trgidx= creepiest.py -dmp ${EnvPaths:confdump}/convert --workers 4 convert --task chain -i {{inputfile}} -o {{outputfile}} -og {TARGET[0]}/{QUERY[0]} -cs ${refdir}/{TARGET[0]}.chrom.sizes


[Ruffus]
use_threads= True
jobs= 10
verbose= 3
history_file= ${EnvPaths:ruffushist}/${Pipeline:name}_hist.sqlite
log_file= ${EnvPaths:ruffuslog}/${Pipeline:name}_ruffus.log

[JobConfig]
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=5G,slots_free=4,tmp_free=5G,h=deep1[0123456789]*|deep2[0123456789]*
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0
